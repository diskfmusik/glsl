#ifndef _MSO_WINDOW_
#define _MSO_WINDOW_

namespace mso
{

	class Window
	{
	public:

		Window(int width = 640, int height = 480, const char* title = "Hello!");
		virtual ~Window();

		// l---------------------------------------------------------------------------
		//  work----------------------------------------
		//    ウィンドウを閉じるべきかを判定する
		//    ウィンドウを閉じる必要がある時に、戻り値は 非 0 になる
		int shouldClose() const;

		// l---------------------------------------------------------------------------
		//  work----------------------------------------
		//    カラーバッファを入れ替えてイベントを取り出す
		void swapBuffers();

		// l---------------------------------------------------------------------------
		//  work----------------------------------------
		//    ウィンドウのサイズを取り出す
		const GLfloat* getSize()const { return size_; }

		// l---------------------------------------------------------------------------
		//  work----------------------------------------
		//    ワールド座標系に対するデバイス座標系の拡大率を取り出す
		GLfloat getScale() const { return scale_; }

		// l---------------------------------------------------------------------------
		//  work----------------------------------------
		//    ウィンドウのサイズ変更時の処理
		//  args----------------------------------------
		//    window : windowインスタンス
		//    width  : 横幅
		//    height : 高さ
		static void resize(GLFWwindow* const window, int width, int height);

		// l---------------------------------------------------------------------------
		//  work----------------------------------------
		//    マウスホイール時の処理
		//  args----------------------------------------
		//    window : windowインスタンス
		//    y : ホイールのスピード
		static void wheel(GLFWwindow* window, double x, double y);

	private:
		GLFWwindow* window_;

		GLfloat size_[2];

		// ワールド座標系に対するデバイス座標系の拡大率
		GLfloat scale_;
	};

} // namespace mso

#endif